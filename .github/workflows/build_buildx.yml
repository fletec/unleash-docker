name: Build and publish latest
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      #      - name: npm
      #        run: npm install
      #      - name: Login to docker hub
      #        uses: docker/login-action@v1
      #        with:
      #          username: ${{ secrets.DOCKERHUB_USERNAME }}
      #          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #      - name: Build
      #        run: |
      #          docker build .
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fletec-unleash
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --push --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest .

#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#      - name: Build & Push
#        uses: docker/build-push-action@v2
#        with:
#          registry: ${{ secrets.AWS_ECR }}
#          repository: fletec-unleash
#          add_git_labels: true
#          tag_with_ref: true
#          push: true
#          tags: latest
#          secrets: |
#            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN  }}